{"version":3,"sources":["components/Profile/Profile.module.css","components/Friends/Friends.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/Friends/FriendsListItem/FriendsListItem.js","components/Friends/FriendsList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","section","list","map","item","percentage","id","FriendsListItem","isOnline","key","green","red","width","FriendsList","friends","friend","propTypes","PropTypes","number","isRequired","string","bool","TransactionHistory","items","table","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3280c89c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Gc4qG\",\"description\":\"Profile_description__PW3io\",\"name\":\"Profile_name__1mAFw\",\"tag\":\"Profile_tag__2gN7F\",\"location\":\"Profile_location__129Rq\",\"avatar\":\"Profile_avatar__2lGB0\",\"stats\":\"Profile_stats__34uVI\",\"label\":\"Profile_label__2-qQZ\",\"quantity\":\"Profile_quantity__2BE7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Friends_list__1u2G3\",\"item\":\"Friends_item__3zwSI\",\"status\":\"Friends_status__2YVOX\",\"green\":\"Friends_green__nuVH3 Friends_status__2YVOX\",\"red\":\"Friends_red__1L0PU Friends_status__2YVOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section__3Y4HP\",\"list\":\"Statistics_list__3Vybe\",\"item\":\"Statistics_item__1dnYm\",\"title\":\"Statistics_title__1Ho5l\",\"label\":\"Statistics_label__3cOHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type\":\"TransactionHistory_type__2-ouG\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.list}>\n        {stats.map(item => {\n          return (\n            <li className={s.item} key={item.id}>\n              <span className={s.label}>{item.label}</span>\n              <span className={s.percentage}>{item.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import s from '../Friends.module.css';\nimport FriendsList from '../FriendsList';\nimport PropTypes from 'prop-types';\n\nexport default function FriendsListItem({ avatar, name, isOnline, key }) {\n  return (\n    <li className={s.item} key={key}>\n      <span className={isOnline ? s.green : s.red}></span>\n      <img className={s.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendsList.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import s from './Friends.module.css';\nimport PropTypes from 'prop-types';\nimport FriendsListItem from './FriendsListItem/FriendsListItem';\n\nexport default function FriendsList({ friends }) {\n  return (\n    <ul className={s.list}>\n      {friends.map(friend => {\n        return (\n          <FriendsListItem\n            key={friend.id}\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nFriendsList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n","import s from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.table}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td className={s.type}>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['invoice', 'withdrawal', 'deposit', 'payment'])\n        .isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import Profile from './Profile/Profile';\nimport user from '../json/user.json';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from '../json/statistical-data.json';\nimport friends from '../json/friends.json';\nimport FriendsList from './Friends/FriendsList';\nimport transactions from '../json/transactions.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n\n      <FriendsList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n// const user1 = user[0];\n//\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}